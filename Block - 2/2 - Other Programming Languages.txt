LLL (Low-Level Lisp-like Language)


[{
  mstore(0x40, 0x60)
  // store the length of the string
  mstore(0x20, 0x0B)
  // store the ASCII values of each character in the string
  mstore(0x00, 0x48656c6c6f2c20576f726c6421000000000000000000000000000000000000)
  // use the string as a memory pointer and print it
  // 0x00 points to the start of the string, 0x0B is the length
  // 0x04 is the print function identifier
  // callvalue is set to 0 so the function call doesn't use any gas
  // 0x0B is the number of arguments (including the string pointer and length)
  // 0x20 is the number of return values (in this case, none)
  // 0x00 indicates that the return data should be stored starting from memory position 0x00
  0x04, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x20, 0x00
}]


Vyper


@public
def helloWorld() -> String[14]:
    return "Hello, World!"




Solidity
//SPDX-License-Identifier: MIT


pragma solidity 0.8.20;


contract MyContract {
    string public ourString = "Hello World";
}